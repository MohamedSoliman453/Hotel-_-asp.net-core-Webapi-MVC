// <auto-generated />
using System;
using Hotel.DataAccess.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231125155617_initial1")]
    partial class initial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hotel.DataAccess.Models.Booking", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingID"), 1L, 1);

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("HotelBranchID")
                        .HasColumnType("int");

                    b.Property<int?>("NoOfPersons")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("HotelBranchID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Hotel.DataAccess.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Hotel.DataAccess.Models.HotelBranch", b =>
                {
                    b.Property<int>("HotelBranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelBranchID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelBranchID");

                    b.ToTable("HotelBranch");

                    b.HasData(
                        new
                        {
                            HotelBranchID = 1,
                            Address = "123 Downtown Ave",
                            BranchName = "Downtown Hotel"
                        },
                        new
                        {
                            HotelBranchID = 2,
                            Address = "1 Airport Rd",
                            BranchName = "Airport Hotel"
                        },
                        new
                        {
                            HotelBranchID = 3,
                            Address = "100 Beach Dr",
                            BranchName = "Beachside Hotel"
                        },
                        new
                        {
                            HotelBranchID = 4,
                            Address = "200 Mountain St",
                            BranchName = "Mountain View Hotel"
                        },
                        new
                        {
                            HotelBranchID = 5,
                            Address = "500 City Center Blvd",
                            BranchName = "City Center Hotel"
                        });
                });

            modelBuilder.Entity("Hotel.DataAccess.Models.Room", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomID"), 1L, 1);

                    b.Property<int>("HotelBranchID")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomID");

                    b.HasIndex("HotelBranchID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomID = 1,
                            HotelBranchID = 1,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 2,
                            HotelBranchID = 1,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 3,
                            HotelBranchID = 1,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 4,
                            HotelBranchID = 1,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 5,
                            HotelBranchID = 1,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 6,
                            HotelBranchID = 1,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 7,
                            HotelBranchID = 1,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 8,
                            HotelBranchID = 1,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 9,
                            HotelBranchID = 1,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 10,
                            HotelBranchID = 1,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 11,
                            HotelBranchID = 1,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 12,
                            HotelBranchID = 1,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 13,
                            HotelBranchID = 1,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 14,
                            HotelBranchID = 1,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 15,
                            HotelBranchID = 1,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 16,
                            HotelBranchID = 1,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 17,
                            HotelBranchID = 2,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 18,
                            HotelBranchID = 2,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 19,
                            HotelBranchID = 2,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 20,
                            HotelBranchID = 2,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 21,
                            HotelBranchID = 2,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 22,
                            HotelBranchID = 2,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 23,
                            HotelBranchID = 2,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 24,
                            HotelBranchID = 2,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 25,
                            HotelBranchID = 2,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 26,
                            HotelBranchID = 2,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 27,
                            HotelBranchID = 2,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 28,
                            HotelBranchID = 2,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 29,
                            HotelBranchID = 2,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 30,
                            HotelBranchID = 2,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 31,
                            HotelBranchID = 2,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 32,
                            HotelBranchID = 2,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 33,
                            HotelBranchID = 3,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 34,
                            HotelBranchID = 3,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 35,
                            HotelBranchID = 3,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 36,
                            HotelBranchID = 3,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 37,
                            HotelBranchID = 3,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 38,
                            HotelBranchID = 3,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 39,
                            HotelBranchID = 3,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 40,
                            HotelBranchID = 3,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 41,
                            HotelBranchID = 3,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 42,
                            HotelBranchID = 3,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 43,
                            HotelBranchID = 3,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 44,
                            HotelBranchID = 3,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 45,
                            HotelBranchID = 3,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 46,
                            HotelBranchID = 3,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 47,
                            HotelBranchID = 3,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 48,
                            HotelBranchID = 3,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 49,
                            HotelBranchID = 4,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 50,
                            HotelBranchID = 4,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 51,
                            HotelBranchID = 4,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 52,
                            HotelBranchID = 4,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 53,
                            HotelBranchID = 4,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 54,
                            HotelBranchID = 4,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 55,
                            HotelBranchID = 4,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 56,
                            HotelBranchID = 4,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 57,
                            HotelBranchID = 4,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 58,
                            HotelBranchID = 4,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 59,
                            HotelBranchID = 4,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 60,
                            HotelBranchID = 4,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 61,
                            HotelBranchID = 4,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 62,
                            HotelBranchID = 4,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 63,
                            HotelBranchID = 4,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 64,
                            HotelBranchID = 4,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 65,
                            HotelBranchID = 5,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 66,
                            HotelBranchID = 5,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 67,
                            HotelBranchID = 5,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 68,
                            HotelBranchID = 5,
                            RoomTypeID = 1,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 69,
                            HotelBranchID = 5,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 70,
                            HotelBranchID = 5,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 71,
                            HotelBranchID = 5,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 72,
                            HotelBranchID = 5,
                            RoomTypeID = 2,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 73,
                            HotelBranchID = 5,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 74,
                            HotelBranchID = 5,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 75,
                            HotelBranchID = 5,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 76,
                            HotelBranchID = 5,
                            RoomTypeID = 3,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 77,
                            HotelBranchID = 5,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 78,
                            HotelBranchID = 5,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 79,
                            HotelBranchID = 5,
                            RoomTypeID = 4,
                            Status = "Available"
                        },
                        new
                        {
                            RoomID = 80,
                            HotelBranchID = 5,
                            RoomTypeID = 4,
                            Status = "Available"
                        });
                });

            modelBuilder.Entity("Hotel.DataAccess.Models.RoomBooking", b =>
                {
                    b.Property<int>("BookingID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BookingID", "RoomID");

                    b.HasIndex("RoomID");

                    b.ToTable("RoomBookings");
                });

            modelBuilder.Entity("Hotel.DataAccess.Models.RoomType", b =>
                {
                    b.Property<int>("RoomTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomTypeID");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            RoomTypeID = 1,
                            Description = "Single Room",
                            Price = 100m,
                            TypeName = "Single"
                        },
                        new
                        {
                            RoomTypeID = 2,
                            Description = "Double Room",
                            Price = 150m,
                            TypeName = "Double"
                        },
                        new
                        {
                            RoomTypeID = 3,
                            Description = "Triple Room",
                            Price = 180m,
                            TypeName = "Triple"
                        },
                        new
                        {
                            RoomTypeID = 4,
                            Description = "Suite Room",
                            Price = 220m,
                            TypeName = "Suite"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Hotel.DataAccess.Models.Booking", b =>
                {
                    b.HasOne("Hotel.DataAccess.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.DataAccess.Models.HotelBranch", null)
                        .WithMany("Bookings")
                        .HasForeignKey("HotelBranchID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Hotel.DataAccess.Models.Room", b =>
                {
                    b.HasOne("Hotel.DataAccess.Models.HotelBranch", "HotelBranch")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelBranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.DataAccess.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotelBranch");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("Hotel.DataAccess.Models.RoomBooking", b =>
                {
                    b.HasOne("Hotel.DataAccess.Models.Booking", "Booking")
                        .WithMany("RoomBookings")
                        .HasForeignKey("BookingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.DataAccess.Models.Room", "Room")
                        .WithMany("RoomBookings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Hotel.DataAccess.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Hotel.DataAccess.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.DataAccess.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Hotel.DataAccess.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel.DataAccess.Models.Booking", b =>
                {
                    b.Navigation("RoomBookings");
                });

            modelBuilder.Entity("Hotel.DataAccess.Models.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Hotel.DataAccess.Models.HotelBranch", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Hotel.DataAccess.Models.Room", b =>
                {
                    b.Navigation("RoomBookings");
                });

            modelBuilder.Entity("Hotel.DataAccess.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
